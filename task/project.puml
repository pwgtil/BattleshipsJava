@startuml
interface battleship.BoardUtils {
~ int BOARD_SIZE
~ HashMap<Integer,String> rowInt2Str
~ HashMap<Integer,String> colInt2Str
~ HashMap<String,Integer> rowStr2Int
~ HashMap<String,Integer> colStr2Int
~ String getBoardForDisplay(boolean)
~ void processShipPlacement(Ship,Position,Position)
~ void processShelling(Position)
~ String lastShotResult()
~ boolean allShipsShelled()
}
class battleship.Board {
~ {static} String MSG_ERR_TOO_CLOSE
~ {static} String MSG_YOU_MISS
~ {static} String MSG_YOU_HIT
~ {static} String MSG_YOU_HIT_AND_SANK_SHIP
~ {static} String MSG_YOU_WIN
~ {static} char ICON_FOG
~ {static} char ICON_SHIP
~ {static} char ICON_HIT
~ {static} char ICON_MISS
- ArrayList<Area> areas
- HashSet<Position> areaOfInfluence
+ String getBoardForDisplay(boolean)
+ void processShipPlacement(Ship,Position,Position)
- void checkAreaOfInfluence(Ship)
+ void processShelling(Position)
- Result checkHitAndProcess(Area)
+ String lastShotResult()
+ boolean allShipsShelled()
}
enum battleship.Result {
+  MISS
+  HIT
+  HIT_AND_SUNK
+  WIN
~ String msg
}
class battleship.Position {
~ int row
~ int col
+ boolean equals(Object)
+ int hashCode()
+ boolean positionInBounds()
+ {static} int stringNum2Int(String)
+ {static} int stringLetter2Int(String)
+ {static} String integer2StringNum(int)
+ {static} String integer2StringLetter(int)
}
abstract class battleship.Area {
# ArrayList<Position> positions
+ ArrayList<Position> getPositions()
+ void setLocation(Position[])
}
class battleship.Ship {
~ {static} String MSG_ERR_WRONG_LOCATION
~ {static} String MSG_ERR_WRONG_LENGTH
+ int noOfCells
+ String name
# int hitPoints
- boolean alive
~ HashSet<Position> areaOfInfluence
+ boolean isAlive()
+ void setLocation(Position[])
- HashSet<Position> fillAreaOfInfluence(ArrayList<Position>)
- ArrayList<Position> fillShipLocation(int,int,int,int)
+ boolean hitShipAndCheckIfDead()
}
class battleship.Shelling {
~ {static} String MSG_ERR_WRONG_COORDINATES
+ int noOfShootsAt
+ void setLocation(Position[])
}
enum battleship.ShipType {
+  CARRIER
+  BATTLESHIP
+  SUBMARINE
+  CRUISER
+  DESTROYER
~ int noOfCells
~ String name
}
interface battleship.PlayerInfo {
~ String getNickname()
~ void printFoggedBoard()
~ void printBothBoards(PlayerMoves)
}
interface battleship.PlayerMoves {
~ void setShipLocationAndDrawBoard(Ship)
~ void fire()
~ boolean checkIfGameContinues()
}
class battleship.Player {
~ {static} String MSG_ENTER_COORDINATES
~ {static} String MSG_DASH_BAR
- Board board
- String nickname
+ String getNickname()
- void setShipLocation(Ship)
- Position getPositionFromText(String)
+ void setShipLocationAndDrawBoard(Ship)
+ void printFoggedBoard()
+ void fire()
- void drawFullBoard()
- void coordinatesPromptAndCheck()
+ boolean checkIfGameContinues()
+ void printBothBoards(PlayerMoves)
}
class battleship.Game {
~ {static} String MSG_PLACE_YOUR_SHIPS
~ {static} String MSG_ITS_YOUR_TURN
~ {static} String MSG_PRESS_ENTER
~ {static} Scanner sc
~ PlayerMoves player1
~ PlayerMoves player2
~ PlayerMoves currentPlayer
+ void initializationOfBoards()
- void playerBoardSetup(PlayerMoves)
+ void startGame()
- void switchPlayer()
- PlayerMoves getEnemy()
+ void passMove()
}
class battleship.Main {
+ {static} void main(String[])
}


battleship.BoardUtils <|.. battleship.Board
battleship.Area <|-- battleship.Ship
battleship.Area <|-- battleship.Shelling
battleship.PlayerInfo <|-- battleship.PlayerMoves
battleship.PlayerMoves <|.. battleship.Player
@enduml